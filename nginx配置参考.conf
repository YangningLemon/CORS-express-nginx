
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  www.amis.com;
	location /api/ {
 		proxy_http_version 1.1;
  		proxy_set_header Upgrade $http_upgrade;
  		proxy_set_header Connection $http_upgrade;
   		proxy_pass http://127.0.0.1:5555/api/;
 	}


        location / {
            proxy_pass http://127.0.0.1:3000;
        }

       
    }

    # 不需要进行下面这几条配置
    # add_header Access-Control-Allow-Origin * always;
    # add_header Access-Control-Allow-Headers *;
    # add_header Access-Control-Allow-Methods "GET, POST, PUT, OPTIONS";
    # add_header Access-Control-Allow-Origin http://localhost:8000;
    # add_header Access-Control-Allow-Credentials true;

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    server {
        listen       8000;
        server_name  localhost; 
	# 前端启动的地址是http://localhost:8000

        location / {
            root   y_app; # 前端打包文件存放的文件夹
            index  index.html index.htm;
        }
	# /apis 是前端对应的标识，表示Nginx收到前端 http://localhost:8000/apis/xxx 请求，Nginx将这个请求转发到 http://localhost:97
    # ?(.*)$表示匹配“/proxy”的内容一次或多次，$1表示直接替换成下面的proxy_pass
	location /apis {

		rewrite ^/apis/?(.*)$ /$1 break;
		proxy_pass http://localhost:97; # 前端请求的的主机1
	}
	# /apis2 是前端对应的标识
	location /apis2 {

		rewrite ^/apis2/?(.*)$ /$1 break;
		proxy_pass http://localhost:98; # 前端请求的主机2
	}
	
	# /apis3 
	# ...


    }


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
